// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud
{
    public static class GetLocations
    {
        /// <summary>
        /// Provides a list of available Hetzner Cloud Locations.
        /// This resource may be useful to create highly available infrastructure, distributed across several locations.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using HCloud = Pulumi.HCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var ds = Output.Create(HCloud.GetLocations.InvokeAsync());
        ///         var workers = new List&lt;HCloud.Server&gt;();
        ///         for (var rangeIndex = 0; rangeIndex &lt; 3; rangeIndex++)
        ///         {
        ///             var range = new { Value = rangeIndex };
        ///             workers.Add(new HCloud.Server($"workers-{range.Value}", new HCloud.ServerArgs
        ///             {
        ///                 Image = "debian-9",
        ///                 ServerType = "cx31",
        ///                 Location = ds.Apply(ds =&gt; ds.Names)[range.Value],
        ///             }));
        ///         }
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLocationsResult> InvokeAsync(GetLocationsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLocationsResult>("hcloud:index/getLocations:getLocations", args ?? new GetLocationsArgs(), options.WithVersion());
    }


    public sealed class GetLocationsArgs : Pulumi.InvokeArgs
    {
        [Input("locationIds")]
        private List<string>? _locationIds;

        /// <summary>
        /// (list) List of unique location identifiers.
        /// </summary>
        public List<string> LocationIds
        {
            get => _locationIds ?? (_locationIds = new List<string>());
            set => _locationIds = value;
        }

        public GetLocationsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLocationsResult
    {
        /// <summary>
        /// (list) List of all location descriptions.
        /// </summary>
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (list) List of unique location identifiers.
        /// </summary>
        public readonly ImmutableArray<string> LocationIds;
        /// <summary>
        /// (list) List of location names.
        /// </summary>
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetLocationsResult(
            ImmutableArray<string> descriptions,

            string id,

            ImmutableArray<string> locationIds,

            ImmutableArray<string> names)
        {
            Descriptions = descriptions;
            Id = id;
            LocationIds = locationIds;
            Names = names;
        }
    }
}
